# -*- coding: utf-8 -*-
"""goit-de-hw-03-Viach-Kuznetsov.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LpqAgEHHcwbe8wpB0SUpTJ4jwR2rgjbr
"""

from google.colab import drive
drive.mount('/content/drive')

!gdown 1cDLTc0KYQfnsDWHLR0cJkF5puBpAo2Uh
!gdown 1im5cGVl1z8ejypTyNJZSQ2lqMGh6tTFN
!gdown 1GN8o8vYP8LLj3A0UWkvbgnf0YjcF3PkV

from pyspark.sql import SparkSession
from pyspark.sql.functions import col, round, sum
from pyspark.sql.types import TimestampType, IntegerType

# Створюємо сесію Spark
spark = SparkSession.builder.appName("goit-de-hw-03").getOrCreate()

# Завантаження та читання CSV-файлів
products_path = "/content/products.csv"
purchases_path = "/content/purchases.csv"
users_path = "/content/users.csv"

products_df = spark.read.csv(products_path, header=True)
purchases_df = spark.read.csv(purchases_path, header=True)
users_df = spark.read.csv(users_path, header=True)

products_df.show()

products_null_counts = products_df.select([sum(col(c).isNull().cast("int")).alias(c) for c in products_df.columns])
products_null_counts.show()

purchases_df.show()

purchases_null_counts = purchases_df.select([sum(col(c).isNull().cast("int")).alias(c) for c in purchases_df.columns])
purchases_null_counts.show()

users_df.show()

users_null_counts = users_df.select([sum(col(c).isNull().cast("int")).alias(c) for c in users_df.columns])
users_null_counts.show()

# Видаляємо будь-які рядки з пропущеними значеннями
products_df = products_df.dropna()
users_df = users_df.dropna()
purchases_df = purchases_df.dropna()

# Загальна сума покупок за кожною категорією продуктів
total_by_cat = products_df.join(purchases_df, "product_id", "inner") \
  .withColumn('total', round(col('quantity') * col('price'), 2)) \
  .groupBy('category') \
  .agg(round(sum('total'),2).alias('total_by_cat'))

total_by_cat.show()

# Сума покупок за кожною категорією продуктів для вікової категорії від 18 до 25 включно.
total_by_cat_18_25 = products_df.join(purchases_df, "product_id", "inner") \
  .join(users_df, "user_id", "inner") \
  .filter((col("age") >= 18) & (col("age") <= 25)) \
  .withColumn('total', round(col('quantity') * col('price'), 2)) \
  .groupBy('category') \
  .agg(round(sum('total'),2).alias('total_by_cat_18_25'))

total_by_cat_18_25.show()

# Частка покупок за кожною категорією товарів від сумарних витрат для вікової категорії від 18 до 25 років.
percentage_by_category = total_by_cat_18_25.join(total_by_cat, "category", "inner") \
  .withColumn("percentage", round((col("total_by_cat_18_25") / col("total_by_cat")) * 100, 2)) \

percentage_by_category.show()

# 3 категорії продуктів з найвищим відсотком витрат споживачами віком від 18 до 25 років
percentage_by_category \
  .orderBy(col("percentage").desc()) \
  .select('category', 'percentage') \
  .limit(3) \
  .show()